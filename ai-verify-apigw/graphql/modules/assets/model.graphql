enum ModelAccessType {
  File
  Folder
  Pipeline
  API
}

enum ModelType {
  Classification
  Regression
}

enum ModelFileStatusType {
  Pending
  Valid
  Invalid
  Error
  Cancelled
}

type ModelFile {
  id: ObjectID!
  name: String!
  type: ModelAccessType!
  filename: String # if type is not API
  filePath: String # if type is not API
  modelAPI: ModelAPIType # if type is API
  ctime: DateTime
  description: String
  status: ModelFileStatusType
  size: String
  modelType: ModelType
  serializer: String
  modelFormat: String
  errorMessages: String
  createdAt: DateTime
  updatedAt: DateTime
}

input ModelFileInput {
  name: String @constraint(minLength: 0, maxLength: 128)
  description: String @constraint(minLength: 0, maxLength: 256)
  modelType: ModelType
}

input ModelAPIInput {
  name: String @constraint(minLength: 0, maxLength: 128)
  description: String @constraint(minLength: 0, maxLength: 256)
  modelType: ModelType
  modelAPI: OpenAPIInput # for model API inputs
}

type Query {
  # return list of modelfiles
  modelFiles(modelFileID: ObjectID): [ModelFile]
  # retrieve the openapi specs for API model
  getOpenAPISpecFromModel(modelFileID: ObjectID!): JSON
}

type Mutation {
  # create model api
  createModelAPI(model: ModelAPIInput!): ModelFile
  updateModelAPI(modelFileID: ObjectID!, model: ModelAPIInput!): ModelFile
  # delete files
  deleteModelFile(id: ObjectID!): ObjectID
  updateModel(modelFileID: ObjectID!, modelFile: ModelFileInput): ModelFile
}

type ModelFileStatusUpdate {
  _id: String
  filename: String
  status: ModelFileStatusType
  serializer: String
  modelFormat: String
  errorMessages: String
}

type Subscription {
  validateModelStatusUpdated: ModelFileStatusUpdate
}
